module.exports = [
    [
        [
            /^%\{/g,
            'preproc',
            1,
            1
        ],
        [
            /^%[sx]/g,
            'preproc',
            16,
            1
        ],
        [
            /^%option/g,
            'preproc',
            17,
            1
        ],
        [
            /^%(?:array|pointer|[aceknopr])/g,
            'preproc',
            -1
        ],
        [
            /[A-Za-z_][A-Za-z0-9_-]*/g,
            'preproc',
            19,
            1
        ],
        [
            /^%%/g,
            'preproc',
            20,
            1
        ]
    ],
    [
        [
            /^%\}/g,
            'preproc',
            -2
        ],
        [
            /(\b(?:class|struct|typename))([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /\b(?:class|const_cast|delete|dynamic_cast|explicit|false|friend|inline|mutable|namespace|new|operator|private|protected|public|reinterpret_cast|static_cast|template|this|throw|true|try|typeid|typename|using|virtual)\b/g,
            'keyword',
            -1
        ],
        [
            /\/\/\//g,
            'comment',
            2
        ],
        [
            /\/\//g,
            'comment',
            8
        ],
        [
            /\/\*\*/g,
            'comment',
            9
        ],
        [
            /\/\*/g,
            'comment',
            10
        ],
        [
            /(\bstruct)([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /^[ \t]*#(?:[ \t]*include)/g,
            'preproc',
            11,
            1
        ],
        [
            /^[ \t]*#(?:[ \t]*[A-Za-z0-9_]*)/g,
            'preproc',
            -1
        ],
        [
            /\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,
            'number',
            -1
        ],
        [
            /"/g,
            'string',
            14
        ],
        [
            /'/g,
            'string',
            15
        ],
        [
            /\b(?:__asm|__cdecl|__declspec|__export|__far16|__fastcall|__fortran|__import|__pascal|__rtti|__stdcall|_asm|_cdecl|__except|_export|_far16|_fastcall|__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto|break|case|catch|cdecl|const|continue|default|do|else|enum|extern|for|goto|if|pascal|register|return|sizeof|static|struct|switch|typedef|union|volatile|while)\b/g,
            'keyword',
            -1
        ],
        [
            /\b(?:bool|char|double|float|int|long|short|signed|unsigned|void|wchar_t)\b/g,
            'type',
            -1
        ],
        [
            /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
            'symbol',
            -1
        ],
        [
            /\{|\}/g,
            'cbracket',
            -1
        ],
        [
            /(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,
            'function',
            -1
        ],
        [
            /([A-Za-z](?:[^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]|[_])*)((?:<.*>)?)(\s+(?=[*&]*[A-Za-z][^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]*\s*[`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\[\]]+))/g,
            ['usertype', 'usertype', 'normal'],
            -1
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,
            'url',
            -1
        ],
        [
            /<\?xml/g,
            'preproc',
            3,
            1
        ],
        [
            /<!DOCTYPE/g,
            'preproc',
            5,
            1
        ],
        [
            /<!--/g,
            'comment',
            6
        ],
        [
            /<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)(?:\/)?>/g,
            'keyword',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)/g,
            'keyword',
            7,
            1
        ],
        [
            /&(?:[A-Za-z0-9]+);/g,
            'preproc',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z][A-Za-z0-9]*(?:\/)?>/g,
            'keyword',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z][A-Za-z0-9]*/g,
            'keyword',
            7,
            1
        ],
        [
            /@[A-Za-z]+/g,
            'type',
            -1
        ],
        [
            /(?:TODO|FIXME|BUG)(?:[:]?)/g,
            'todo',
            -1
        ]
    ],
    [
        [
            /\?>/g,
            'preproc',
            -2
        ],
        [
            /([^=" \t>]+)([ \t]*)(=?)/g,
            ['type', 'normal', 'symbol'],
            -1
        ],
        [
            /"/g,
            'string',
            4
        ]
    ],
    [
        [
            /\\(?:\\|")/g,
            null,
            -1
        ],
        [
            /"/g,
            'string',
            -2
        ]
    ],
    [
        [
            />/g,
            'preproc',
            -2
        ],
        [
            /([^=" \t>]+)([ \t]*)(=?)/g,
            ['type', 'normal', 'symbol'],
            -1
        ],
        [
            /"/g,
            'string',
            4
        ]
    ],
    [
        [
            /-->/g,
            'comment',
            -2
        ],
        [
            /<!--/g,
            'comment',
            6
        ]
    ],
    [
        [
            /(?:\/)?>/g,
            'keyword',
            -2
        ],
        [
            /([^=" \t>]+)([ \t]*)(=?)/g,
            ['type', 'normal', 'symbol'],
            -1
        ],
        [
            /"/g,
            'string',
            4
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ]
    ],
    [
        [
            /\*\//g,
            'comment',
            -2
        ],
        [
            /(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,
            'url',
            -1
        ],
        [
            /<\?xml/g,
            'preproc',
            3,
            1
        ],
        [
            /<!DOCTYPE/g,
            'preproc',
            5,
            1
        ],
        [
            /<!--/g,
            'comment',
            6
        ],
        [
            /<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)(?:\/)?>/g,
            'keyword',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)/g,
            'keyword',
            7,
            1
        ],
        [
            /&(?:[A-Za-z0-9]+);/g,
            'preproc',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z][A-Za-z0-9]*(?:\/)?>/g,
            'keyword',
            -1
        ],
        [
            /<(?:\/)?[A-Za-z][A-Za-z0-9]*/g,
            'keyword',
            7,
            1
        ],
        [
            /@[A-Za-z]+/g,
            'type',
            -1
        ],
        [
            /(?:TODO|FIXME|BUG)(?:[:]?)/g,
            'todo',
            -1
        ]
    ],
    [
        [
            /\*\//g,
            'comment',
            -2
        ],
        [
            /(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,
            'url',
            -1
        ],
        [
            /(?:TODO|FIXME|BUG)(?:[:]?)/g,
            'todo',
            -1
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /</g,
            'string',
            12
        ],
        [
            /"/g,
            'string',
            13
        ],
        [
            /\/\/\//g,
            'comment',
            2
        ],
        [
            /\/\//g,
            'comment',
            8
        ],
        [
            /\/\*\*/g,
            'comment',
            9
        ],
        [
            /\/\*/g,
            'comment',
            10
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            />/g,
            'string',
            -2
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /\\(?:\\|")/g,
            null,
            -1
        ],
        [
            /"/g,
            'string',
            -2
        ]
    ],
    [
        [
            /"/g,
            'string',
            -2
        ],
        [
            /\\./g,
            'specialchar',
            -1
        ]
    ],
    [
        [
            /'/g,
            'string',
            -2
        ],
        [
            /\\./g,
            'specialchar',
            -1
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /[A-Za-z_][A-Za-z0-9_-]*/g,
            'function',
            -1
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /[A-Za-z_][A-Za-z0-9_-]*/g,
            'keyword',
            -1
        ],
        [
            /"/g,
            'string',
            18
        ],
        [
            /=/g,
            'symbol',
            -1
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /"/g,
            'string',
            -2
        ]
    ],
    [
        [
            /$/g,
            null,
            -2
        ],
        [
            /\{[A-Za-z_][A-Za-z0-9_-]*\}/g,
            'type',
            -1
        ],
        [
            /"/g,
            'string',
            13
        ],
        [
            /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
            'symbol',
            -1
        ]
    ],
    [
        [
            /^%%/g,
            'preproc',
            21,
            1
        ],
        [
            /<[A-Za-z_][A-Za-z0-9_-]*>/g,
            'function',
            -1
        ],
        [
            /"/g,
            'string',
            13
        ],
        [
            /\\./g,
            'preproc',
            -1
        ],
        [
            /\{[A-Za-z_][A-Za-z0-9_-]*\}/g,
            'type',
            -1
        ],
        [
            /\/\*/g,
            'comment',
            22
        ],
        [
            /\{/g,
            'cbracket',
            23,
            1
        ],
        [
            /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
            'symbol',
            -1
        ]
    ],
    [
        [
            /(\b(?:class|struct|typename))([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /\b(?:class|const_cast|delete|dynamic_cast|explicit|false|friend|inline|mutable|namespace|new|operator|private|protected|public|reinterpret_cast|static_cast|template|this|throw|true|try|typeid|typename|using|virtual)\b/g,
            'keyword',
            -1
        ],
        [
            /\/\/\//g,
            'comment',
            2
        ],
        [
            /\/\//g,
            'comment',
            8
        ],
        [
            /\/\*\*/g,
            'comment',
            9
        ],
        [
            /\/\*/g,
            'comment',
            10
        ],
        [
            /(\bstruct)([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /^[ \t]*#(?:[ \t]*include)/g,
            'preproc',
            11,
            1
        ],
        [
            /^[ \t]*#(?:[ \t]*[A-Za-z0-9_]*)/g,
            'preproc',
            -1
        ],
        [
            /\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,
            'number',
            -1
        ],
        [
            /"/g,
            'string',
            14
        ],
        [
            /'/g,
            'string',
            15
        ],
        [
            /\b(?:__asm|__cdecl|__declspec|__export|__far16|__fastcall|__fortran|__import|__pascal|__rtti|__stdcall|_asm|_cdecl|__except|_export|_far16|_fastcall|__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto|break|case|catch|cdecl|const|continue|default|do|else|enum|extern|for|goto|if|pascal|register|return|sizeof|static|struct|switch|typedef|union|volatile|while)\b/g,
            'keyword',
            -1
        ],
        [
            /\b(?:bool|char|double|float|int|long|short|signed|unsigned|void|wchar_t)\b/g,
            'type',
            -1
        ],
        [
            /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
            'symbol',
            -1
        ],
        [
            /\{|\}/g,
            'cbracket',
            -1
        ],
        [
            /(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,
            'function',
            -1
        ],
        [
            /([A-Za-z](?:[^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]|[_])*)((?:<.*>)?)(\s+(?=[*&]*[A-Za-z][^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]*\s*[`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\[\]]+))/g,
            ['usertype', 'usertype', 'normal'],
            -1
        ]
    ],
    [
        [
            /\*\//g,
            'comment',
            -2
        ],
        [
            /\/\*/g,
            'comment',
            22
        ]
    ],
    [
        [
            /\}/g,
            'cbracket',
            -2
        ],
        [
            /\{/g,
            'cbracket',
            23,
            1
        ],
        [
            /\$./g,
            'variable',
            -1
        ],
        [
            /(\b(?:class|struct|typename))([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /\b(?:class|const_cast|delete|dynamic_cast|explicit|false|friend|inline|mutable|namespace|new|operator|private|protected|public|reinterpret_cast|static_cast|template|this|throw|true|try|typeid|typename|using|virtual)\b/g,
            'keyword',
            -1
        ],
        [
            /\/\/\//g,
            'comment',
            2
        ],
        [
            /\/\//g,
            'comment',
            8
        ],
        [
            /\/\*\*/g,
            'comment',
            9
        ],
        [
            /\/\*/g,
            'comment',
            10
        ],
        [
            /(\bstruct)([ \t]+)([A-Za-z0-9_]+)/g,
            ['keyword', 'normal', 'classname'],
            -1
        ],
        [
            /^[ \t]*#(?:[ \t]*include)/g,
            'preproc',
            11,
            1
        ],
        [
            /^[ \t]*#(?:[ \t]*[A-Za-z0-9_]*)/g,
            'preproc',
            -1
        ],
        [
            /\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,
            'number',
            -1
        ],
        [
            /"/g,
            'string',
            14
        ],
        [
            /'/g,
            'string',
            15
        ],
        [
            /\b(?:__asm|__cdecl|__declspec|__export|__far16|__fastcall|__fortran|__import|__pascal|__rtti|__stdcall|_asm|_cdecl|__except|_export|_far16|_fastcall|__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto|break|case|catch|cdecl|const|continue|default|do|else|enum|extern|for|goto|if|pascal|register|return|sizeof|static|struct|switch|typedef|union|volatile|while)\b/g,
            'keyword',
            -1
        ],
        [
            /\b(?:bool|char|double|float|int|long|short|signed|unsigned|void|wchar_t)\b/g,
            'type',
            -1
        ],
        [
            /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
            'symbol',
            -1
        ],
        [
            /\{|\}/g,
            'cbracket',
            -1
        ],
        [
            /(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,
            'function',
            -1
        ],
        [
            /([A-Za-z](?:[^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]|[_])*)((?:<.*>)?)(\s+(?=[*&]*[A-Za-z][^`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\s]*\s*[`~!@#$%&*()_=+{}|;:",<.>\/?'\\[\]\^\-\[\]]+))/g,
            ['usertype', 'usertype', 'normal'],
            -1
        ]
    ]
];
